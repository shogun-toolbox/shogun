<?xml version="1.0"?>
<tool id="eval" name="Evaluate Predictions">
<description>Use predictions and labeled examples to measure prediction performance</description>
  <command interpreter="python">easysvm.py
        eval
	$predfile
	#if $datatype.inputdatatype=="1"
	    fasta $datatype.dataset_pos $datatype.dataset_neg
	#else
	    arff $datatype.dataset
        #end if
	$outfile $figuretype $figurefile
  </command>
  <inputs>
          <param type="data" format="tabular" name="predfile" help="Select a prediction file." label="Predictions" />
	  <conditional name="datatype">
	  <param name="inputdatatype" type="select" label="Input data type" help="">
	  <option value="1">FASTA</option>
	  <option value="2">ARFF</option>
	  </param>
	  <when value="1">
		  <param name="dataset_pos" type="data" format="fasta">
		  <label >A data file with positive sequence for training</label>
		  </param>
		  <param name="dataset_neg" type="data" format="fasta">
		  <label >A data file with negaitive sequence for training</label>
		  </param>
	  </when>
	  <when value="2">
		  <param name="dataset" type="data" format="arff">
		  <label >A data file with labeled examples for training</label>
		  </param>
	  </when>
	  </conditional>
	  <param name="figuretype" type="select" label="Graphical evaluation type" help="">
	  <option value="roc">Receiver Operator Curve (ROC)</option>
	  <option value="prc">Precision Recall Curve (PRC)</option>
	  </param>
  </inputs>
  <outputs>
    <data format="txt" name="outfile" />
    <data format="png" name="figurefile" />
  </outputs>
  <help>
.. class:: infomark

    This tool takes a set of predictions and the a labeled dataset as input
    and computes several performance measures. Only the labels are taken
    into account for evaluation. Two output files are generated: a text
    summary and either an ROC or PRC curve.

.. class:: warningmark

    Make sure the prediction file matches the dataset.

.. class:: infomark

    **TIP:** To optimize the SVM hyper-parameters, you may also use *SVM Toolbox->Model Selection*.

----

    This tool is part of the MLB Galaxy package, adding some machine
    learning functionality to PSU's Galaxy framework.  Copyright (C)
    2008 Sebastian J. Schultheiss (sebi@umich.edu), Gunnar Raetsch
    (raetsch@tuebingen.mpg.de) and Cheng Soon Ong (chengsoon.ong@tuebingen.mpg.de)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see http://www.gnu.org/licenses
    or write to the Free Software Foundation, Inc., 51 Franklin Street,
    Fifth Floor, Boston, MA 02110-1301  USA
  </help>
</tool>



