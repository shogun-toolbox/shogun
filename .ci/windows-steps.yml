steps:
- checkout: self
  clean: true
  fetchDepth: 5
  submodules: true

# see: https://github.com/Microsoft/azure-pipelines-tasks/issues/8504
- script: |
    echo '##vso[task.setvariable variable=PATH]$(Build.SourcesDirectory)\build\src\shogun\$(buildConfiguration);$(CONDA_PREFIX);$(CONDA_PREFIX)\Library\mingw-w64\bin;$(CONDA_PREFIX)\Library\usr\bin;$(CONDA_PREFIX)\Library\bin;$(CONDA_PREFIX)\Scripts;$(CONDA_PREFIX)\bin;$(CONDA_PREFIX_1);$(CONDA_PREFIX_1)\Library\mingw-w64\bin;$(CONDA_PREFIX_1)\Library\usr\bin;$(CONDA_PREFIX_1)\Library\bin;$(CONDA_PREFIX_1)\Scripts;$(CONDA_PREFIX_1)\bin;$(PATH)'
  displayName: Add conda and build directory to PATH

- script: 'conda env create -f .ci\shogun.yml --quiet'

- script: |
    .ci\\setup_clcache.cmd
  displayName: Setup CLCache

- script: mkdir $(targetPrefix)
  displayName: Create artifact directory

- template: ./download-extract.yml
  parameters:
    name: 'CLcache'
    artifactName: $(clcacheArtifactName)
    destinationFolder: $(clcacheDir)
    downloadPath: $(Build.BinariesDirectory)

- ${{ if eq(parameters.swig, 'true') }}:
  - template: ./download-extract.yml
    parameters:
      name: 'LibShogun'
      artifactName: $(libshogunArtifactName)
      downloadPath: $(Build.BinariesDirectory)
      destinationFolder: $(targetPrefix)
      specificBuildWithTriggering: true

- task: CMake@1
  displayName: Setup
  inputs:
    cmakeArgs: '-G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=$(buildConfiguration) -DCMAKE_PREFIX_PATH=$(CONDA_PREFIX)\Library -DENABLE_TESTING=ON -DCMAKE_INSTALL_PREFIX=$(targetPrefix) $(cmakeOptions) -DBLAS_LIBRARIES=$(CONDA_PREFIX)/Library/lib/mkl_core_dll.lib -DLAPACK_LIBRARIES=$(CONDA_PREFIX)/Library/lib/mkl_core_dll.lib -DBLA_VENDOR=Intel ..'

- task: CMake@1
  displayName: 'Build ($(buildConfiguration) $(buildPlatform))'
  inputs:
    cmakeArgs: '--build . --config $(buildConfiguration) --target INSTALL -- /p:TrackFileAccess=false /p:CLToolExe=clcache.exe /m:2'

- script: ctest --output-on-failure -j 2 -C $(buildConfiguration)
  displayName: Test
  workingDirectory: $(Build.SourcesDirectory)\build

- script: clcache -s
  displayName: CLCache statistics

- ${{ if ne(parameters.swig, 'true') }}:
  - template: ./archive-deploy.yml
    parameters:
      name: 'LibShogun'
      dir: $(targetPrefix)
      archive: $(libshogunArchive)
      artifactName: $(libshogunArtifactName)

- template: ./archive-deploy.yml
  parameters:
    name: 'CLcache'
    dir: $(clcacheDir)
    archive: $(clcacheArchive)
    artifactName: $(clcacheArtifactName)
