CSVFile f_feats_train("../../data/classifier_4class_2d_linear_features_train.dat")
CSVFile f_feats_test("../../data/classifier_4class_2d_linear_features_test.dat")
CSVFile f_labels_train("../../data/classifier_4class_2d_linear_labels_train.dat")
CSVFile f_labels_test("../../data/classifier_4class_2d_linear_labels_test.dat")

#![create_features]
Features features_train = features(f_feats_train)
Features features_test = features(f_feats_test)
MulticlassLabels labels_train(f_labels_train)
MulticlassLabels labels_test(f_labels_test)
#![create_features]

#![create_combination_rule]
MajorityVote m_vote()
#![create_combination_rule]

#![create_instance]
RandomForest rand_forest(features_train, labels_train)
rand_forest.put("num_bags", 100)
Parallel p = rand_forest.get_global_parallel()
p.set_num_threads(1)
rand_forest.put("seed", 1)
rand_forest.set_combination_rule(m_vote)
#![create_instance]

#![train_and_apply]
rand_forest.train()
MulticlassLabels labels_predict = rand_forest.apply_multiclass(features_test)
#![train_and_apply]

#![evaluate_accuracy]
Evaluation acc = evaluation("MulticlassAccuracy")
real oob = rand_forest.get_oob_error(acc)
real accuracy = acc.evaluate(labels_predict, labels_test)
#![evaluate_accuracy]

# additional integration testing variables
RealVector output = labels_predict.get_labels()

