CSVFile f_feats_train("../../data/classifier_binary_2d_nonlinear_features_train.dat")
CSVFile f_feats_test("../../data/classifier_binary_2d_nonlinear_features_test.dat")
CSVFile f_labels_train("../../data/classifier_binary_2d_nonlinear_labels_train.dat")
CSVFile f_labels_test("../../data/classifier_binary_2d_nonlinear_labels_test.dat")

#![create_features]
RealFeatures features_train(f_feats_train)
RealFeatures features_test(f_feats_test)
BinaryLabels labels_train(f_labels_train)
BinaryLabels labels_test(f_labels_test)
#![create_features]

#![create_kernel]
PolyKernel poly_kernel(10,2)
GaussianKernel gauss_kernel_1(2.0)
GaussianKernel gauss_kernel_2(3.0)
#![create_kernel]

#![create_combined_train]
CombinedKernel combined_kernel()
combined_kernel.append_kernel(poly_kernel)
combined_kernel.append_kernel(gauss_kernel_1)
combined_kernel.append_kernel(gauss_kernel_2)
combined_kernel.init(features_train, features_train)
#![create_combined_train]

#![train_mkl]
MKLClassification mkl()
mkl.set_kernel(combined_kernel)
mkl.set_labels(labels_train)
mkl.train()
#![train_mkl]

#![extract_weights]
RealVector beta = combined_kernel.get_subkernel_weights()
RealVector alpha = mkl.get_alphas()
real bias = mkl.get_bias()
#![extract_weights]

#![create_combined_test]
combined_kernel.init(features_train, features_test)
#![create_combined_test]

#![mkl_apply]
mkl.set_kernel(combined_kernel)
BinaryLabels labels_predict = mkl.apply_binary()
#![mkl_apply]

#![evaluate_accuracy]
AccuracyMeasure eval()
real accuracy = eval.evaluate(labels_predict, labels_test)
#![evaluate_accuracy]

# additional integration testing variables
RealVector output = labels_predict.get_labels()
