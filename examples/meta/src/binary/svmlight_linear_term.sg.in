File f_feats_train = read_csv("@SHOGUN_DATA@/fm_train_small_dna.dat")
File f_feats_test = read_csv("@SHOGUN_DATA@/fm_test_small_dna.dat")
File f_labels_train = read_csv("@SHOGUN_DATA@/label_train_small_dna.dat")

#![create_features]
Features feats_train = create_string_features(f_feats_train, enum EAlphabet.DNA)
Features feats_test = create_string_features(f_feats_test, enum EAlphabet.DNA)
Labels labels_train = create_labels(f_labels_train)
#![create_features]

#![create_kernel]
Kernel svm_kernel = create_kernel("WeightedDegreeStringKernel", degree=3)
svm_kernel.init(feats_train, feats_train)
#![create_kernel]

#![create_classifier]
Machine svm = create_machine("SVMLight", kernel=svm_kernel, labels=labels_train, C1=10.0, C2=10.0, epsilon=0.00001)
svm.put("qpsize", 3)
Parallel p = svm.get_global_parallel()
p.set_num_threads(1)
#![create_classifier]

#![set_linear_term]
RealVector linear_term(10)
linear_term[0] = 1.0
linear_term[1] = 2.0
linear_term[2] = 3.0
linear_term[3] = 4.0
linear_term[4] = 5.0
linear_term[5] = 6.0
linear_term[6] = 7.0
linear_term[7] = 8.0
linear_term[8] = 7.0
linear_term[9] = 6.0
svm.put("linear_term", linear_term)
#![set_linear_term]

#![train_and_apply]
svm.train()
svm_kernel.init(feats_train, feats_test)
Labels labels_predict = svm.apply(feats_test)
RealVector labels_vector = labels_predict.get_real_vector("labels")
#![train_and_apply]
