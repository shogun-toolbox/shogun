File f_feats_train = read_csv("@SHOGUN_DATA@/regression_1d_sinc_features_train.dat")
File f_feats_test = read_csv("@SHOGUN_DATA@/regression_1d_sinc_features_test.dat")
File f_labels_train = read_csv("@SHOGUN_DATA@/regression_1d_sinc_labels_train.dat")
File f_labels_test = read_csv("@SHOGUN_DATA@/regression_1d_sinc_labels_test.dat")

#![create_features]
Features features_train = create_features(f_feats_train)
Features features_test = create_features(f_feats_test)
Labels labels_train = create_labels(f_labels_train)
Labels labels_test = create_labels(f_labels_test)
#![create_features]

#![create_appropriate_kernel]
Kernel k = create_kernel("GaussianKernel", log_width=0.0)
#![create_appropriate_kernel]

#![create_instance]
Machine krr = create_machine("KernelRidgeRegression", labels=labels_train, tau=0.001, kernel=k)
#![create_instance]

#![train_and_apply]
krr.train(features_train)
Labels labels_predict = krr.apply_regression(features_test)
#![train_and_apply]

#![extract_alpha]
RealVector alphas = krr.get_real_vector("m_alpha")
#![extract_alpha]

#![evaluate_error]
Evaluation eval = create_evaluation("MeanSquaredError")
real mse = eval.evaluate(labels_predict, labels_test)
#![evaluate_error]

# integration testing variables
RealVector output = labels_test.get_real_vector("labels")
