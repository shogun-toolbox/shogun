{
    "Program": "import org.jblas.DoubleMatrix;\nimport org.jblas.FloatMatrix;\n\nimport org.shogun.shogun;\n$dependencies\n\npublic class $programName {\nstatic {\nSystem.loadLibrary(\"shogun\");\n}\n\npublic static void main(String argv[]) {\n$program\n}\n}\n",
    "Dependencies": {
        "IncludeAllClasses": true, 
        "IncludeEnums": true,
        "IncludeGlobalFunctions": false,
        "DependencyListElement": "import org.shogun.$typeName;",
        "DependencyListSeparator": "\n",
        "ExcludeImport": ["StringCharList", "StringWordList", "RealVector", "RealMatrix", "BoolMatrix", "ByteMatrix", "WordMatrix", "IntMatrix", "LongIntMatrix", "ShortRealMatrix", "BoolVector", "IntVector", "ByteVector", "LongIntVector", "ShortRealVector", "WordVector"]
    },
    "Statement": "$statement;\n",
    "Comment": "//$comment\n",
    "Init": {
        "Construct": "$typeName $name = new $typeName($arguments)$kwargs",
        "Copy": "$typeName $name = $expr$kwargs",
        "KeywordArguments": {
            "List": ";\n$elements",
            "Element": "$name.put(\"$keyword\", $expr)",
            "Separator": ";\n",
            "InitialSeperatorWhenArgs>0": false
        },
        "BoolVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "CharVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "ByteVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "WordVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "IntVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "LongIntVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "ULongIntVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "ShortRealVector": "FloatMatrix $name = new FloatMatrix(1, $arguments)",
        "RealVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "LongRealVector": "DoubleMatrix $name = new DoubleMatrix(1, $arguments)",
        "BoolMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "CharMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "ByteMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "WordMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "IntMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "LongIntMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "ULongIntMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "ShortRealMatrix": "FloatMatrix $name = new FloatMatrix($arguments)",
        "RealMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)",
        "LongRealMatrix": "DoubleMatrix $name = new DoubleMatrix($arguments)"
    },
    "ListInit": {
        "BoolVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "CharVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "ByteVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "WordVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "IntVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "LongIntVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "ULongIntVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "ShortRealVector": "FloatMatrix $name = new FloatMatrix(new float [][] {{$arguments}})",
        "RealVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})",
        "LongRealVector": "DoubleMatrix $name = new DoubleMatrix(new double [][] {{$arguments}})"
    },
    "Assign": "$identifier = $expr",
    "Type": {
        "Default": "$typeName",
        "Math": "org.shogun.Math",
        "bool": "boolean",
        "int": "int",
        "float": "float",
        "real": "double",
        "string": "String",
        "char": "char",
        "CharVector": "DoubleMatrix",
        "ByteVector": "DoubleMatrix",
        "WordVector": "DoubleMatrix",
        "ShortVector": "DoubleMatrix",
        "IntVector": "DoubleMatrix",
        "LongIntVector": "DoubleMatrix",
        "ULongIntVector": "DoubleMatrix",
        "ShortRealVector": "FloatMatrix",
        "RealVector": "DoubleMatrix",
        "LongRealVector": "DoubleMatrix",
        "ComplexVector": "DoubleMatrix",
        "CharMatrix": "DoubleMatrix",
        "ByteMatrix": "DoubleMatrix",
        "WordMatrix": "DoubleMatrix",
        "ShortMatrix": "DoubleMatrix",
        "IntMatrix": "DoubleMatrix",
        "LongIntMatrix": "DoubleMatrix",
        "ULongIntMatrix": "DoubleMatrix",
        "ShortRealMatrix": "FloatMatrix",
        "RealMatrix": "DoubleMatrix",
        "LongRealMatrix": "DoubleMatrix",
        "ComplexMatrix": "DoubleMatrix",
        "StringCharList": "String[]",
        "StringWordList": "int[][]"
    },
    "Expr": {
        "StringLiteral": "\"$literal\"",
        "CharLiteral": "'$literal'",
        "BoolLiteral": {
            "True": "true",
            "False": "false"
        },
        "IntLiteral": "$number",
        "RealLiteral": "$number",
        "FloatLiteral": "${number}f",
        "MethodCall": {
            "Default": "$object.$method($arguments)"
        },
        "StaticCall": "$typeName.$method($arguments)",
        "GlobalCall": { "Default": "shogun.$method($arguments)"},
        "Identifier": "$identifier",
        "Enum":"$typeName.$value"
    },
    "Element": {
        "Access": {
            "Vector": "$identifier.get($indices)",
            "Matrix": "$identifier.get($indices)",
            "BoolVector": "$identifier.get($indices) == 1.0 ? true : false",
            "BoolMatrix": "$identifier.get($indices) == 1.0 ? true : false"
        },
        "Assign": {
            "Vector": "$identifier.put($indices, $expr)",
            "Matrix": "$identifier.put($indices, $expr)",
            "BoolVector": "$identifier.put($indices, $expr ? 1.0 : 0.0)",
            "BoolMatrix": "$identifier.put($indices, $expr ? 1.0 : 0.0)"
        },
        "ZeroIndexed": true
    },
    "Print": "System.out.println($expr)",
    "OutputDirectoryName": "java",
    "FileExtension": ".java"
}
