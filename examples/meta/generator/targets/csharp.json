{
    "Program": "using System;\n\npublic class Application {\npublic static void Main() {\n$program\n}\n}\n",
    "Statement": "$statement;\n",
    "Comment": "//$comment\n",
    "Init": {
        "Construct": "$typeName $name = new $typeName($arguments)$kwargs",
        "Copy": "$typeName $name = $expr$kwargs",
        "KeywordArguments": {
            "List": ";\n$elements",
            "Element": "$name.put(\"$keyword\", $expr)",
            "Separator": ";\n",
            "InitialSeperatorWhenArgs>0": false
        },
        "BoolVector": "var $name = new byte[$arguments]",
        "CharVector": "var $name = new char[$arguments]",
        "ByteVector": "var $name = new byte[$arguments]",
        "WordVector": "var $name = new ushort[$arguments]",
        "IntVector": "var $name = new int[$arguments]",
        "LongIntVector": "var $name = new long[$arguments]",
        "ULongIntVector": "var $name = new ulongint[$arguments]",
        "ShortRealVector": "var $name = new float[$arguments]",
        "RealVector": "var $name = new double[$arguments]",
        "LongRealVector": "var $name = new double[$arguments]",
        "ComplexVector": "var $name = new Complex[$arguments]",
        "BoolMatrix": "var $name = new byte[$arguments]",
        "CharMatrix": "var $name = new char[$arguments]",
        "ByteMatrix": "var $name = new byte[$arguments]",
        "WordMatrix": "var $name = new ushort[$arguments]",
        "IntMatrix": "var $name = new int[$arguments]",
        "LongIntMatrix": "var $name = new long[$arguments]",
        "ULongIntMatrix": "var $name = new ulongint[$arguments]",
        "ShortRealMatrix": "var $name = new float[$arguments]",
        "RealMatrix": "var $name = new double[$arguments]",
        "LongRealMatrix": "var $name = new double[$arguments]",
        "ComplexMatrix": "var $name = new Complex[$arguments]"
    },
    "ListInit": {
        "BoolVector": "var $name = new byte[] {$arguments}",
        "CharVector": "var $name = new char[] {$arguments}",
        "ByteVector": "var $name = new byte[] {$arguments}",
        "WordVector": "var $name = new ushort[] {$arguments}",
        "IntVector": "var $name = new int[] {$arguments}",
        "LongIntVector": "var $name = new long[] {$arguments}",
        "ULongIntVector": "var $name = new ulongint[] {$arguments}",
        "ShortRealVector": "var $name = new float[] {$arguments}",
        "RealVector": "var $name = new double[] {$arguments}",
        "LongRealVector": "var $name = new double[] {$arguments}",
        "ComplexVector": "var $name = new Complex[] {$arguments}"
    },
    "Assign": "$identifier = $expr",
    "Type": {
        "Default": "$typeName",
        "bool": "bool",
        "string": "String",
        "char": "char",
        "int": "int",
        "float": "float",
        "real": "double",
        "CharVector": "char[]",
        "ByteVector": "byte[]",
        "WordVector": "ushort[]",
        "ShortVector": "short[]",
        "IntVector": "int[]",
        "LongIntVector": "long[]",
        "ULongIntVector": "ulongint[]",
        "ShortRealVector": "float[]",
        "RealVector": "double[]",
        "LongRealVector": "double[]",
        "ComplexVector": "Complex[]",
        "CharMatrix": "char[,]",
        "ByteMatrix": "byte[,]",
        "WordMatrix": "ushort[,]",
        "ShortMatrix": "short[,]",
        "IntMatrix": "int[,]",
        "LongIntMatrix": "long[,]",
        "ULongIntMatrix": "ulongint[,]",
        "ShortRealMatrix": "float[,]",
        "RealMatrix": "double[,]",
        "LongRealMatrix": "double[,]",
        "ComplexMatrix": "Complex[,]",
        "StringCharList": "String[]",
        "StringWordList": "short[][]"
    },
    "Expr": {
        "StringLiteral": "\"$literal\"",
        "CharLiteral": "'$literal'",
        "BoolLiteral": {
            "True": "true",
            "False": "false"
        },
        "IntLiteral": "$number",
        "RealLiteral": "$number",
        "FloatLiteral": "${number}f",
        "MethodCall": {
            "Default": "$object.$method($arguments)"
        },
        "StaticCall": "$typeName.$method($arguments)",
        "GlobalCall": {"Default": "shogun.$method($arguments)"},
        "Identifier": "$identifier",
        "Enum":"$typeName.$value"
    },
    "Element": {
        "Access": {
            "Vector": "$identifier[$indices]",
            "Matrix": "$identifier[$indices]",
            "BoolVector": "$identifier[$indices] == 1 ? true : false",
            "BoolMatrix": "$identifier[$indices] == 1 ? true : false"
        },
        "Assign": {
            "Vector": "$identifier[$indices] = $expr",
            "Matrix": "$identifier[$indices] = $expr",
            "BoolVector": "$identifier[$indices] = $expr ? (byte)1 : (byte)0",
            "BoolMatrix": "$identifier[$indices] = $expr ? (byte)1 : (byte)0"
        },
        "ZeroIndexed": true
    },
    "Print": "Console.Write($expr)",
    "OutputDirectoryName": "csharp",
    "FileExtension": ".cs"
}
